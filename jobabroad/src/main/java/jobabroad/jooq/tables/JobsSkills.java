/*
 * This file is generated by jOOQ.
 */
package jobabroad.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jobabroad.jooq.Indexes;
import jobabroad.jooq.Jobabroad;
import jobabroad.jooq.Keys;
import jobabroad.jooq.tables.records.JobsSkillsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobsSkills extends TableImpl<JobsSkillsRecord> {

    private static final long serialVersionUID = 220992031;

    /**
     * The reference instance of <code>jobabroad.jobs_skills</code>
     */
    public static final JobsSkills JOBS_SKILLS = new JobsSkills();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JobsSkillsRecord> getRecordType() {
        return JobsSkillsRecord.class;
    }

    /**
     * The column <code>jobabroad.jobs_skills.id_job</code>.
     */
    public final TableField<JobsSkillsRecord, Integer> ID_JOB = createField("id_job", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jobabroad.jobs_skills.id_skill</code>.
     */
    public final TableField<JobsSkillsRecord, Integer> ID_SKILL = createField("id_skill", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>jobabroad.jobs_skills</code> table reference
     */
    public JobsSkills() {
        this(DSL.name("jobs_skills"), null);
    }

    /**
     * Create an aliased <code>jobabroad.jobs_skills</code> table reference
     */
    public JobsSkills(String alias) {
        this(DSL.name(alias), JOBS_SKILLS);
    }

    /**
     * Create an aliased <code>jobabroad.jobs_skills</code> table reference
     */
    public JobsSkills(Name alias) {
        this(alias, JOBS_SKILLS);
    }

    private JobsSkills(Name alias, Table<JobsSkillsRecord> aliased) {
        this(alias, aliased, null);
    }

    private JobsSkills(Name alias, Table<JobsSkillsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jobabroad.JOBABROAD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.JOBS_SKILLS_ID_SKILL, Indexes.JOBS_SKILLS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JobsSkillsRecord> getPrimaryKey() {
        return Keys.KEY_JOBS_SKILLS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JobsSkillsRecord>> getKeys() {
        return Arrays.<UniqueKey<JobsSkillsRecord>>asList(Keys.KEY_JOBS_SKILLS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JobsSkillsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JobsSkillsRecord, ?>>asList(Keys.JOBS_SKILLS_IBFK_1, Keys.JOBS_SKILLS_IBFK_2);
    }

    public Jobs jobs() {
        return new Jobs(this, Keys.JOBS_SKILLS_IBFK_1);
    }

    public Skills skills() {
        return new Skills(this, Keys.JOBS_SKILLS_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsSkills as(String alias) {
        return new JobsSkills(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsSkills as(Name alias) {
        return new JobsSkills(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JobsSkills rename(String name) {
        return new JobsSkills(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JobsSkills rename(Name name) {
        return new JobsSkills(name, null);
    }
}
